[{"/home/edward/Documents/class-attend/client/src/index.js":"1","/home/edward/Documents/class-attend/client/src/reportWebVitals.js":"2","/home/edward/Documents/class-attend/client/src/App.js":"3","/home/edward/Documents/class-attend/client/src/components/Dashboard.js":"4","/home/edward/Documents/class-attend/client/src/components/Students.js":"5","/home/edward/Documents/class-attend/client/src/components/Courses.js":"6","/home/edward/Documents/class-attend/client/src/components/Attendance.js":"7","/home/edward/Documents/class-attend/client/src/components/routes/PrivateRoute.js":"8","/home/edward/Documents/class-attend/client/src/components/routes/PublicRoute.js":"9","/home/edward/Documents/class-attend/client/src/components/auth/SignIn.js":"10","/home/edward/Documents/class-attend/client/src/components/auth/SignUp.js":"11","/home/edward/Documents/class-attend/client/src/context/StudentContext.js":"12","/home/edward/Documents/class-attend/client/src/context/AttendanceContext.js":"13","/home/edward/Documents/class-attend/client/src/reducers/studentReducer.js":"14","/home/edward/Documents/class-attend/client/src/reducers/attendanceReducer.js":"15","/home/edward/Documents/class-attend/client/src/actions/types.js":"16","/home/edward/Documents/class-attend/client/src/components/CreateStudent.jsx":"17","/home/edward/Documents/class-attend/client/src/actions/studentActions.js":"18","/home/edward/Documents/class-attend/client/src/actions/attendanceAction.js":"19","/home/edward/Documents/class-attend/client/src/context/LecturerContext.js":"20","/home/edward/Documents/class-attend/client/src/actions/lecturerAction.js":"21","/home/edward/Documents/class-attend/client/src/reducers/lecturerReducer.js":"22","/home/edward/Documents/class-attend/client/src/components/Logs.jsx":"23","/home/edward/Documents/class-attend/client/src/context/LogContext.js":"24","/home/edward/Documents/class-attend/client/src/reducers/logReducer.js":"25","/home/edward/Documents/class-attend/client/src/actions/logActions.js":"26","/home/edward/Documents/class-attend/client/src/components/Timetable.jsx":"27","/home/edward/Documents/class-attend/client/src/components/Assessment.jsx":"28","/home/edward/Documents/class-attend/client/src/context/Assessment.js":"29","/home/edward/Documents/class-attend/client/src/reducers/assessmentReducer.js":"30","/home/edward/Documents/class-attend/client/src/actions/assessmentAction.js":"31"},{"size":500,"mtime":1611702238000,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1611702238000,"results":"34","hashOfConfig":"33"},{"size":1594,"mtime":1613192187553,"results":"35","hashOfConfig":"33"},{"size":7500,"mtime":1613190357200,"results":"36","hashOfConfig":"33"},{"size":15457,"mtime":1612955168280,"results":"37","hashOfConfig":"33"},{"size":2528,"mtime":1612126821000,"results":"38","hashOfConfig":"33"},{"size":9393,"mtime":1613197563049,"results":"39","hashOfConfig":"33"},{"size":863,"mtime":1612191462000,"results":"40","hashOfConfig":"33"},{"size":865,"mtime":1612191486000,"results":"41","hashOfConfig":"33"},{"size":3668,"mtime":1612082054000,"results":"42","hashOfConfig":"33"},{"size":5660,"mtime":1612087184000,"results":"43","hashOfConfig":"33"},{"size":449,"mtime":1612019529000,"results":"44","hashOfConfig":"33"},{"size":467,"mtime":1612043411000,"results":"45","hashOfConfig":"33"},{"size":486,"mtime":1612130619000,"results":"46","hashOfConfig":"33"},{"size":609,"mtime":1612944078072,"results":"47","hashOfConfig":"33"},{"size":526,"mtime":1613190910489,"results":"48","hashOfConfig":"33"},{"size":9338,"mtime":1612389945984,"results":"49","hashOfConfig":"33"},{"size":933,"mtime":1612389538958,"results":"50","hashOfConfig":"33"},{"size":1507,"mtime":1612943896144,"results":"51","hashOfConfig":"33"},{"size":460,"mtime":1612048194000,"results":"52","hashOfConfig":"33"},{"size":906,"mtime":1612083317000,"results":"53","hashOfConfig":"33"},{"size":799,"mtime":1612091001000,"results":"54","hashOfConfig":"33"},{"size":2304,"mtime":1612192306000,"results":"55","hashOfConfig":"33"},{"size":446,"mtime":1612135724000,"results":"56","hashOfConfig":"33"},{"size":286,"mtime":1612135813000,"results":"57","hashOfConfig":"33"},{"size":535,"mtime":1612192542000,"results":"58","hashOfConfig":"33"},{"size":203,"mtime":1612191393000,"results":"59","hashOfConfig":"33"},{"size":4906,"mtime":1613196254555,"results":"60","hashOfConfig":"33"},{"size":476,"mtime":1613192975681,"results":"61","hashOfConfig":"33"},{"size":259,"mtime":1613191154434,"results":"62","hashOfConfig":"33"},{"size":349,"mtime":1613196315220,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"py0plh",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/edward/Documents/class-attend/client/src/index.js",[],["133","134"],"/home/edward/Documents/class-attend/client/src/reportWebVitals.js",[],"/home/edward/Documents/class-attend/client/src/App.js",[],"/home/edward/Documents/class-attend/client/src/components/Dashboard.js",[],"/home/edward/Documents/class-attend/client/src/components/Students.js",["135","136","137"],"import React, { useContext, useState, useEffect } from 'react';\nimport {StudentContext} from '../context/StudentContext'\nimport { getStudents, deleteStudent} from '../actions/studentActions'\n\nimport CreateStudent from './CreateStudent'\nimport Modal from '@material-ui/core/Modal'\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid'\nimport FormGroup from '@material-ui/core/FormGroup';\n\n// function createData(fullName, cardId, dept, level, imgUrl, phone, courses) {\n//   return { fullName, cardId, dept, level, imgUrl, phone, courses };\n// }\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Donut', 452, 25.0, 51, 4.9),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//   createData('KitKat', 518, 26.0, 65, 7.0),\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\n//   createData('Marshmallow', 318, 0, 81, 2.0),\n//   createData('Nougat', 360, 19.0, 9, 37.0),\n//   createData('Oreo', 437, 18.0, 63, 4.0),\n// ];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n// const headCells = [\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n// ];\n\nconst headCells = [\n  // { id: 'matNo', numeric: true, disablePadding: false, label: 'MAT NO.' },\n  { id: 'matNo', numeric: false, disablePadding: true, label: 'MAT NO.' },\n  { id: 'fullName', numeric: true, disablePadding: false, label: 'STUDENT NAME' },\n  { id: 'cardId', numeric: true, disablePadding: false, label: 'CARD ID' },\n  { id: 'department', numeric: true, disablePadding: false, label: 'DEPARTMENT' },\n  { id: 'level', numeric: true, disablePadding: false, label: 'LEVEL' },\n  { id: 'imgUrl', numeric: true, disablePadding: false, label: 'IMAGE URL' },\n  { id: 'phone', numeric: true, disablePadding: false, label: 'PHONE NO.' },\n  { id: 'courses', numeric: true, disablePadding: false, label: 'COURSES' }\n];\n\nfunction EnhancedTableHead(props) {\n  // const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          {/* <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          /> */}\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\n// EnhancedTableHead.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Students\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 600,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function Students() {\n  // My code starts\n\n  const {state, dispatch} = useContext(StudentContext)\n\n  useEffect(() => {\n    getStudents({dispatch})\n  // }, [])\n  })\n\n  const deleteAStudent = (id) => {\n    deleteStudent({dispatch, id})\n  }\n\n  // const {fullName, cardId, dept, level, imgUrl, phone, courses}  = state\n  // const rows = state.map(aStudent => {\n  //   return(\n  //     createData(fullName, cardId, dept, level, imgUrl, phone, courses)\n  //   )\n  // })\n\n  const [open, setOpen]  = useState(false)\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  \n  // const rows = [\n  //   createData('Cupcake', 305, 3.7, 67, 4.3),\n  //   createData('Donut', 452, 25.0, 51, 4.9),\n  //   createData('Eclair', 262, 16.0, 24, 6.0),\n  //   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  //   createData('Gingerbread', 356, 16.0, 49, 3.9),\n  //   createData('Honeycomb', 408, 3.2, 87, 6.5),\n  //   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  //   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  //   createData('KitKat', 518, 26.0, 65, 7.0),\n  //   createData('Lollipop', 392, 0.2, 98, 0.0),\n  //   createData('Marshmallow', 318, 0, 81, 2.0),\n  //   createData('Nougat', 360, 19.0, 9, 37.0),\n  //   createData('Oreo', 437, 18.0, 63, 4.0),\n  // ];\n\n  \n\n  // My code ends\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('fullName');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      // const newSelecteds = rows.map((n) => n.name);\n      const newSelecteds = state.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, state.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      {/* <Paper className={classes.paper}> */}\n            <FormGroup row>\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleOpen} style={{marginLeft: \"auto\"}}>\n                CREATE STUDENT\n              </Button>\n              <Modal\n                open={open}\n                onClose={handleClose}\n              >\n                <CreateStudent closeForm={handleClose}/>\n              </Modal>\n            </FormGroup>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            \n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              // rowCount={rows.length}\n              rowCount={state.length}\n            />\n            \n            <TableBody>\n              {/* {state && stableSort(state, getComparator(order, orderBy)) */}\n              {state && state\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.cardId}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        {/* <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        /> */}\n                        <IconButton aria-label=\"delete\">\n                          <DeleteIcon onClick={() => {deleteAStudent(row._id)}}/>\n                        </IconButton>\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.matNo}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.fullName}</TableCell>\n                      <TableCell align=\"right\">{row.cardId}</TableCell>\n                      <TableCell align=\"right\">{row.dept}</TableCell>\n                      <TableCell align=\"right\">{row.level}</TableCell>\n                      <TableCell align=\"right\"><a href={row.imgUrl} target=\"_blank\">Show</a></TableCell>\n                      <TableCell align=\"right\">{row.phone}</TableCell>\n                      <TableCell align=\"right\">{row.courses.map(course => `${course}, `)}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          // count={rows.length}\n          count={state.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      {/* </Paper> */}\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","/home/edward/Documents/class-attend/client/src/components/Courses.js",[],"/home/edward/Documents/class-attend/client/src/components/Attendance.js",["138"],"import React, {useContext, useEffect, useState} from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Divider from '@material-ui/core/Divider'\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport {AttendanceContext} from '../context/AttendanceContext'\n// import {LecturerContext} from '../context/LecturerContext'\nimport {getAllAttendance, setCourse, getAttendanceByDateAndCourse, deleteAttendance} from '../actions/attendanceAction'\n// import {useHistory, useRouteMatch} from 'react-router-dom'\n\nimport { CSVLink } from \"react-csv\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n  inputs: {\n    marginTop: \".5rem\",\n    marginBottom: \".5rem\",\n  }\n});\n\n\nexport default function Attendance() {\n  const classes = useStyles();\n  const {state, dispatch} = useContext(AttendanceContext)\n  // const lecturer = useContext(LecturerContext)\n\n  const [courseSelect, setCourseSelect] = useState({\n    isChecked: false,\n    course: \"\",\n    date: \"2021-02-01\"\n  })\n\n  // const history = useHistory()\n\n  // const {path, url} = useRouteMatch()\n\n  const handleChangeCheck = (event) => {\n    setCourseSelect({...courseSelect, [event.target.name]: event.target.checked})\n    if(courseSelect.course){\n      let lecturerName = JSON.parse(localStorage.getItem(\"user\")).fullName\n      let lecturerId = JSON.parse(localStorage.getItem(\"user\"))._id\n      // if(lecturer.state.user === {}){\n        // lecturerName = JSON.parse(localStorage.getItem(\"user\")).fullName\n      // }\n      setCourse({course: courseSelect.course, lecturerName, lecturerId})\n    }\n  }\n\n  const handleChangeCourse = (event) => {\n    setCourseSelect({...courseSelect, [event.target.name]: event.target.value})\n  }\n\n  const handleDateSelect = (event) => {\n    setCourseSelect({...courseSelect, [event.target.name]: event.target.value})\n  }\n\n  const handleDateSubmit = () => {\n    if(courseSelect.isChecked){\n      if(!courseSelect.course || !courseSelect.date) return;\n      const id = JSON.parse(localStorage.getItem(\"user\"))._id\n      getAttendanceByDateAndCourse({dispatch, courseSelect, id})\n    }\n  }\n\n  useEffect(() => {\n    const id = JSON.parse(localStorage.getItem(\"user\"))._id\n    // console.log(id)\n    getAllAttendance({dispatch, id})\n  }, [])\n\n  const deleteAnAttendance = (id) => {\n    deleteAttendance({dispatch, id})\n  }\n  \n  return (\n    <Paper>\n      <form style={{marginBottom: \".5rem\"}}>\n        <FormGroup row style={{paddingLeft: \".5rem\"}}>\n          <TextField\n            id=\"outlined-basic\"\n            disabled={courseSelect.isChecked}\n            label=\"Set Course (e.g MCT504)\"\n            variant=\"outlined\"\n            name=\"course\"\n            onChange={handleChangeCourse}\n            value={courseSelect.course}\n            style={{marginRight: \".8rem\"}}\n            className={classes.inputs}\n          />\n          <FormControlLabel\n            control={\n              <Switch\n                checked={state.courseSelect}\n                onChange={handleChangeCheck}\n                name=\"isChecked\"\n                color=\"primary\"\n              />\n            }\n            label=\"Set\"\n            // style={{marginRight: \".8rem\"}}\n            className={classes.inputs}\n          />\n          <Divider orientation=\"vertical\" flexItem style={{marginRight: \"1.5rem\", marginLeft:\"1.5rem\"}}/>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            // className={classes.button}\n            startIcon={<ArrowForwardIcon />}\n            onClick={handleDateSubmit}\n            size=\"small\"\n            // style={{width: \"8rem\"}}\n            style={{marginRight: \"1.8rem\", width: \"8rem\"}}\n            className={classes.inputs}\n          >\n            Fetch\n          </Button>\n          <FormControlLabel\n            control={\n              <TextField\n                id=\"outlined-basic\"\n                // disabled={}\n                // label=\"Set Course\"\n                variant=\"outlined\"\n                name=\"date\"\n                onChange={handleDateSelect}\n                value={courseSelect.date}\n                type=\"date\"\n                // style={{marginRight: \".8rem\"}}\n              />\n            }\n            label=\"Select Date\"\n            // style={{marginLeft: \"1rem\"}}\n            className={classes.inputs}\n          />\n          <Divider orientation=\"vertical\" flexItem style={{marginRight: \"1.5rem\", marginLeft:\".8rem\"}}/>\n          {/* <Button\n            variant=\"contained\"\n            color=\"primary\"\n            // className={classes.button}\n            startIcon={<GetAppIcon />}\n            // onClick={() => getAllAttendance({dispatch})}\n            size=\"small\"\n            className={classes.inputs}\n          >\n            Download CSV\n          </Button> */}\n          <CSVLink\n            data={state}\n            headers={\n              [\n                { label: \"Student Name\", key: \"studentName\" },\n                { label: \"Card ID\", key: \"cardId\" },\n                { label: \"Course\", key: \"course\" },\n                { label: \"Lecturer\", key: \"lecturerName\" },\n                { label: \"Date\", key: \"date\" }\n              ]\n            }\n            filename={`Attendance-${courseSelect.date}.csv`}\n            className=\"btn btn-primary\"\n            target=\"_blank\"\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.button}\n              startIcon={<GetAppIcon />}\n              // onClick={() => getAllAttendance({dispatch})}\n              // size=\"small\"\n              className={classes.inputs}\n            >\n              Download CSV\n            </Button>\n          </CSVLink>\n          <Divider orientation=\"vertical\" flexItem style={{marginRight: \"1.5rem\", marginLeft:\".8rem\"}}/>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            // className={classes.button}\n            startIcon={<RefreshIcon />}\n            onClick={() => getAllAttendance({dispatch, id: JSON.parse(localStorage.getItem(\"user\"))._id})}\n            size=\"small\"\n            className={classes.inputs}\n          >\n            Refresh\n          </Button>\n      </FormGroup>\n    </form>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell align=\"center\"><strong style={{color: \"red\"}}>X</strong></StyledTableCell>\n            <StyledTableCell>Student Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Card ID</StyledTableCell>\n            <StyledTableCell align=\"right\">Course</StyledTableCell>\n            <StyledTableCell align=\"right\">Lecturer</StyledTableCell>\n            <StyledTableCell align=\"right\">Date</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* {rows.map((row) => ( */}\n          {state && state.map((row) => (\n            <StyledTableRow key={row._id}>\n              <StyledTableCell align=\"center\">\n                <IconButton aria-label=\"delete\">\n                  <DeleteIcon onClick={() => {deleteAnAttendance(row._id)}}/>\n                </IconButton>\n              </StyledTableCell>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.studentName}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.cardId}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.course}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.lecturerName}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Paper>\n  );\n}\n","/home/edward/Documents/class-attend/client/src/components/routes/PrivateRoute.js",[],"/home/edward/Documents/class-attend/client/src/components/routes/PublicRoute.js",[],"/home/edward/Documents/class-attend/client/src/components/auth/SignIn.js",[],"/home/edward/Documents/class-attend/client/src/components/auth/SignUp.js",[],"/home/edward/Documents/class-attend/client/src/context/StudentContext.js",[],"/home/edward/Documents/class-attend/client/src/context/AttendanceContext.js",[],"/home/edward/Documents/class-attend/client/src/reducers/studentReducer.js",[],"/home/edward/Documents/class-attend/client/src/reducers/attendanceReducer.js",[],"/home/edward/Documents/class-attend/client/src/actions/types.js",[],"/home/edward/Documents/class-attend/client/src/components/CreateStudent.jsx",["139","140","141"],"import React from 'react';\nimport { makeStyles} from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper'\nimport Input from '@material-ui/core/Input'\n// import Typography from '@material-ui/core/Typography'\nimport { useState, useContext, useEffect } from 'react';\nimport {addStudent} from '../actions/studentActions'\nimport {StudentContext} from '../context/StudentContext'\nimport axios from 'axios'\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n    //   margin: theme.spacing(1),\n    //   width: '25ch',\n    padding: theme.spacing(.5)\n    },\n  },\n}));\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // display: 'flex'\n    },\n    formControl: {\n        margin: theme.spacing(4)\n    },\n    paper: {\n        position: 'absolute',\n        width: 800,\n        height: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n      },\n}))\n\nexport default function CreateStudent(props) {\n  const classes = useStyles();\n  const classes2 = useStyles2();\n  const courses = [\"MCT502\", \"MCT304\", \"MCT508\", \"MCT516\", \"MCT506\", \"MCT510\", \"MCT313\", \"MCT528\", \"MCT524\", \"MCT526\", \"MCT512\", \"MCT504\", \"MCT314\", \"FET504\"]\n  const [state, setState] = useState({\n     MCT502: false, MCT304: false, MCT508: true, MCT516: true, MCT506: false, MCT510: false, MCT313: false, MCT528: true, MCT524: false, MCT526: false, MCT512: false, MCT504: false, MCT314: false, FET504: false\n  })\n  \n  const student = useContext(StudentContext)\n\n  const theFormData = new FormData()\n\n  const [formState, setFormState] = useState({\n      cardId: \"\",\n      fullName: \"\",\n      matNo: \"\",\n      dept: \"\",\n      level: \"\",\n      phone: \"\",\n      imgUrl: \"\"\n  })\n\n  const handleImageLink = (e) => {\n    const url = \"https://api.cloudinary.com/v1_1/class-attend/image/upload\";\n    const file = e.target.files[0]\n    \n    const resourse = new FileReader()\n    resourse.readAsDataURL(file)\n    resourse.onloadend = () => {\n        theFormData.append(\"file\", resourse.result)\n        theFormData.append(\"upload_preset\", \"class-attend\")\n        fetch(url, {method: \"post\", body: theFormData}).then(resp => {\n            // console.log(resp)\n            return resp.json()\n        }).then(data => {\n            // console.log(data.url)\n            setFormState({...formState, imgUrl: data.url})\n        }).catch(e => console.log(e))\n    }\n\n    };\n\n//   const {MCT502, MCT304, MCT508, MCT516, MCT506, MCT510, MCT313, MCT528, MCT524, MCT526, MCT512, MCT504, MCT314, FET504} = state\n//   const error = [MCT502, MCT304, MCT508, MCT516, MCT506, MCT510, MCT313, MCT528, MCT524, MCT526, MCT512, MCT504, MCT314, FET504].filter(one => one).length < 3\nconst error = false\n\n  const getCourses = () => {\n      return courses.filter(course => state[course])\n  }\n\n  const handleChange = (event) => {\n      setState({...state, [event.target.name]: event.target.checked})\n  }\n\n  const handleFormChange = (e) => {\n      setFormState({...formState, [e.target.name]: e.target.value})\n  }\n\n  const handleFormSubmit = (e) => {\n      if(!(formState.cardId.length === 0) && !(formState.fullName.length === 0) && !(formState.imgUrl.length === 0) && !(formState.matNo.length === 0) && !(formState.dept.length === 0) && !(formState.level.length === 0)){\n        const theSelectCourse = getCourses()\n        addStudent({dispatch: student.dispatch, newStudent: {...formState, courses: theSelectCourse}})\n        props.closeForm()\n      }\n  }\n\n  return (\n    <Paper style={{top: `50%`, left: `50%`, transform: `translate(-50%, -50%)`}} className={classes.paper}>\n        {/* <Typography variant=\"h6\" gutterBottom>\n            CREATE STUDENT\n      </Typography> */}\n      {/* <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{margin: \".5rem\"}}\n            onClick={handleFormSubmit}\n            fullWidth\n        >\n            CREATE STUDENT\n        </Button> */}\n    <form className={classes2.root} noValidate autoComplete=\"off\">\n      <TextField id=\"outlined-basic1\" onChange={handleFormChange} name=\"fullName\" value={formState.fullName} label=\"Full Name\"  variant=\"outlined\" />\n      <TextField id=\"outlined-basic2\" onChange={handleFormChange} name=\"matNo\" value={formState.matNo} label=\"Mat No.\"  variant=\"outlined\" />\n      <TextField id=\"outlined-basic3\" onChange={handleFormChange} name=\"cardId\" value={formState.cardId} label=\"Card ID\" variant=\"outlined\" />\n        <TextField id=\"outlined-basic4\" onChange={handleImageLink} name=\"imgUrl\" accept=\"image/*\" variant=\"outlined\" style={{width:\"93%\"}} type=\"file\"/>\n      <TextField id=\"outlined-basic5\" onChange={handleFormChange} name=\"dept\" value={formState.dept} label=\"Department\" variant=\"outlined\" />\n      <TextField id=\"outlined-basic6\" onChange={handleFormChange} name=\"level\" value={formState.level} label=\"Level\" variant=\"outlined\" />\n      <TextField id=\"outlined-basic7\" onChange={handleFormChange} name=\"phone\" value={formState.phone} label=\"Phone Number\" variant=\"outlined\" />\n      <Paper variant=\"outlined\">\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">Select Your Courses</FormLabel>\n            <FormGroup>\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT502} onChange={handleChange} name=\"MCT502\" />}\n                label=\"MCT502\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT516} onChange={handleChange} name=\"MCT516\" />}\n                label=\"MCT516\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT313} onChange={handleChange} name=\"MCT313\" />}\n                label=\"MCT313\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT526} onChange={handleChange} name=\"MCT526\" />}\n                label=\"MCT526\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT314} onChange={handleChange} name=\"MCT314\" />}\n                label=\"MCT314\"\n            />\n            </FormGroup>\n            {/* <FormHelperText>Must Offer three Courses at least</FormHelperText> */}\n            <FormHelperText>Must Select one from each section*</FormHelperText>\n        </FormControl>\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\"></FormLabel>\n            <FormGroup>\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT304} onChange={handleChange} name=\"MCT304\" />}\n                label=\"MCT304\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT506} onChange={handleChange} name=\"MCT506\" />}\n                label=\"MCT506\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT528} onChange={handleChange} name=\"MCT528\" />}\n                label=\"MCT528\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT512} onChange={handleChange} name=\"MCT512\" />}\n                label=\"MCT512\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT504} onChange={handleChange} name=\"MCT504\" />}\n                label=\"MCT504\"\n            />\n            </FormGroup>\n            {/* <FormHelperText>Must Offer a Course here</FormHelperText> */}\n        </FormControl>\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\"></FormLabel>\n            <div></div>\n            <FormGroup>\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT508} onChange={handleChange} name=\"MCT508\" />}\n                label=\"MCT508\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT510} onChange={handleChange} name=\"MCT510\" />}\n                label=\"MCT510\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.MCT524} onChange={handleChange} name=\"MCT524\" />}\n                label=\"MCT524\"\n            />\n            <FormControlLabel\n                control={<Checkbox checked={state.FET504} onChange={handleChange} name=\"FET504\" />}\n                label=\"FET504\"\n            />\n            </FormGroup>\n            {/* <FormHelperText>Must Offer a Course here</FormHelperText> */}\n        </FormControl>\n        </Paper>\n    </form>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{margin: \".5rem\"}}\n            onClick={handleFormSubmit}\n            fullWidth\n        >\n            CREATE STUDENT\n        </Button>\n        </Paper>\n  );\n}",["142","143"],"/home/edward/Documents/class-attend/client/src/actions/studentActions.js",[],"/home/edward/Documents/class-attend/client/src/actions/attendanceAction.js",[],"/home/edward/Documents/class-attend/client/src/context/LecturerContext.js",[],"/home/edward/Documents/class-attend/client/src/actions/lecturerAction.js",[],"/home/edward/Documents/class-attend/client/src/reducers/lecturerReducer.js",[],"/home/edward/Documents/class-attend/client/src/components/Logs.jsx",["144"],"import React, {useContext, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {LogContext} from '../context/LogContext'\nimport {getLogs} from '../actions/logActions'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\nexport default function Logs() {\n  const classes = useStyles();\n  const {state, dispatch} = useContext(LogContext)\n\n  useEffect(() => {\n    getLogs({dispatch})\n  }, [])\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Lecturer</TableCell>\n            <TableCell align=\"right\">Course</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            {/* <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell> */}\n            {/* <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {state && state.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell >\n                {row.lecturerName}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" align=\"right\">{row.course}</TableCell>\n              <TableCell align=\"right\">{row.createdAt}</TableCell>\n              {/* <TableCell align=\"right\">{row.carbs}</TableCell> */}\n              {/* <TableCell align=\"right\">{row.protein}</TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/home/edward/Documents/class-attend/client/src/context/LogContext.js",[],"/home/edward/Documents/class-attend/client/src/reducers/logReducer.js",[],"/home/edward/Documents/class-attend/client/src/actions/logActions.js",[],"/home/edward/Documents/class-attend/client/src/components/Timetable.jsx",[],"/home/edward/Documents/class-attend/client/src/components/Assessment.jsx",["145","146"],"import React, {useState, useContext, useEffect} from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport FormGroup from '@material-ui/core/FormGroup'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\n\nimport {AssessmentContext} from '../context/Assessment'\nimport {getAssessment} from '../actions/assessmentAction'\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function Assessment() {\n  const classes = useStyles();\n\n  const [course, setCourse] = useState()\n\n  const {state, dispatch} = useContext(AssessmentContext)\n\n  useEffect(() => {\n    const defCourse = JSON.parse(localStorage.getItem(\"user\")).course\n    getAssessment({course: defCourse, dispatch})\n  }, [])\n\n  const handleSelectCourse = (event) => {\n    setCourse(event.target.value)\n  }\n\n  const fetchAssessment = () => {\n    getAssessment({course, dispatch})\n  }\n\n  return (\n      <div>\n          <form style={{marginBottom: \".5rem\"}}>\n            <FormGroup row style={{paddingLeft: \".5rem\"}}>\n                <TextField\n                    id=\"outlined-basic\"\n                    // disabled={courseSelect.isChecked}\n                    label=\"Set Course (e.g MCT504)\"\n                    variant=\"outlined\"\n                    name=\"course\"\n                    onChange={handleSelectCourse}\n                    value={course}\n                    style={{marginRight: \".8rem\"}}\n                    className={classes.inputs}\n                />\n                {/* <Divider orientation=\"vertical\" flexItem style={{marginRight: \"1.5rem\", marginLeft:\"1.5rem\"}}/> */}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    // className={classes.button}\n                    startIcon={<ArrowForwardIcon />}\n                    onClick={fetchAssessment}\n                    size=\"small\"\n                    // style={{width: \"8rem\"}}\n                    style={{marginRight: \"1.8rem\", width: \"8rem\"}}\n                    className={classes.inputs}\n                >\n                    Fetch\n                </Button>\n            </FormGroup>\n        </form>\n        <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n            <TableRow>\n                <StyledTableCell>STUDENT NAME</StyledTableCell>\n                <StyledTableCell align=\"right\">MAT NO.</StyledTableCell>\n                <StyledTableCell align=\"right\">ATTENDANCE COUNT</StyledTableCell>\n                <StyledTableCell align=\"right\">COURSE</StyledTableCell>\n                {/* <StyledTableCell align=\"right\">Carbs&nbsp;(g)</StyledTableCell> */}\n                {/* <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell> */}\n            </TableRow>\n            </TableHead>\n            <TableBody>\n            {\n                state && state.map((row) => (\n                <StyledTableRow key={row.student._id}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                    {row.student.fullName}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.student.matNo}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.attendanceCount}</StyledTableCell>\n                <StyledTableCell align=\"right\">{row.course}</StyledTableCell>\n                {/* <StyledTableCell align=\"right\">{row.carbs}</StyledTableCell> */}\n                {/* <StyledTableCell align=\"right\">{row.protein}</StyledTableCell> */}\n                </StyledTableRow>\n            ))}\n            </TableBody>\n        </Table>\n        </TableContainer>\n    </div>\n  );\n}\n","/home/edward/Documents/class-attend/client/src/context/Assessment.js",[],"/home/edward/Documents/class-attend/client/src/reducers/assessmentReducer.js",[],"/home/edward/Documents/class-attend/client/src/actions/assessmentAction.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":65,"column":10,"nodeType":"153","messageId":"154","endLine":65,"endColumn":23},{"ruleId":"151","severity":1,"message":"155","line":71,"column":10,"nodeType":"153","messageId":"154","endLine":71,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":423,"column":48,"nodeType":"158","endLine":423,"endColumn":85},{"ruleId":"159","severity":1,"message":"160","line":118,"column":6,"nodeType":"161","endLine":118,"endColumn":8,"suggestions":"162"},{"ruleId":"151","severity":1,"message":"163","line":12,"column":8,"nodeType":"153","messageId":"154","endLine":12,"endColumn":13},{"ruleId":"151","severity":1,"message":"164","line":14,"column":32,"nodeType":"153","messageId":"154","endLine":14,"endColumn":41},{"ruleId":"151","severity":1,"message":"165","line":17,"column":8,"nodeType":"153","messageId":"154","endLine":17,"endColumn":13},{"ruleId":"147","replacedBy":"166"},{"ruleId":"149","replacedBy":"167"},{"ruleId":"159","severity":1,"message":"160","line":38,"column":6,"nodeType":"161","endLine":38,"endColumn":8,"suggestions":"168"},{"ruleId":"151","severity":1,"message":"169","line":37,"column":10,"nodeType":"153","messageId":"154","endLine":37,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":65,"column":6,"nodeType":"161","endLine":65,"endColumn":8,"suggestions":"170"},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'getComparator' is defined but never used.","Identifier","unusedVar","'stableSort' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'Input' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.",["171"],["172"],["174"],"'createData' is defined but never used.",["175"],"no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},{"desc":"176","fix":"179"},"Update the dependencies array to be: [dispatch]",{"range":"180","text":"181"},{"range":"182","text":"181"},{"range":"183","text":"181"},[3886,3888],"[dispatch]",[1207,1209],[1971,1973]]