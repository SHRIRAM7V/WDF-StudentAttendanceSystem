[{"/home/edward/Documents/class-attend/client/src/index.js":"1","/home/edward/Documents/class-attend/client/src/reportWebVitals.js":"2","/home/edward/Documents/class-attend/client/src/App.js":"3","/home/edward/Documents/class-attend/client/src/components/Dashboard.js":"4","/home/edward/Documents/class-attend/client/src/components/Students.js":"5","/home/edward/Documents/class-attend/client/src/components/Courses.js":"6","/home/edward/Documents/class-attend/client/src/components/Attendance.js":"7","/home/edward/Documents/class-attend/client/src/components/routes/PrivateRoute.js":"8","/home/edward/Documents/class-attend/client/src/components/routes/PublicRoute.js":"9","/home/edward/Documents/class-attend/client/src/components/auth/SignIn.js":"10","/home/edward/Documents/class-attend/client/src/components/auth/SignUp.js":"11","/home/edward/Documents/class-attend/client/src/context/StudentContext.js":"12","/home/edward/Documents/class-attend/client/src/context/AttendanceContext.js":"13","/home/edward/Documents/class-attend/client/src/reducers/studentReducer.js":"14","/home/edward/Documents/class-attend/client/src/reducers/attendanceReducer.js":"15","/home/edward/Documents/class-attend/client/src/actions/types.js":"16","/home/edward/Documents/class-attend/client/src/components/CreateStudent.jsx":"17","/home/edward/Documents/class-attend/client/src/actions/studentActions.js":"18","/home/edward/Documents/class-attend/client/src/actions/attendanceAction.js":"19","/home/edward/Documents/class-attend/client/src/context/LecturerContext.js":"20","/home/edward/Documents/class-attend/client/src/actions/lecturerAction.js":"21","/home/edward/Documents/class-attend/client/src/reducers/lecturerReducer.js":"22","/home/edward/Documents/class-attend/client/src/components/Logs.jsx":"23","/home/edward/Documents/class-attend/client/src/context/LogContext.js":"24","/home/edward/Documents/class-attend/client/src/reducers/logReducer.js":"25","/home/edward/Documents/class-attend/client/src/actions/logActions.js":"26","/home/edward/Documents/class-attend/client/src/components/Timetable.jsx":"27"},{"size":500,"mtime":1611702238474,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1611702238474,"results":"30","hashOfConfig":"29"},{"size":1451,"mtime":1612136712595,"results":"31","hashOfConfig":"29"},{"size":7122,"mtime":1612139150932,"results":"32","hashOfConfig":"29"},{"size":14869,"mtime":1612133819460,"results":"33","hashOfConfig":"29"},{"size":2528,"mtime":1612126821858,"results":"34","hashOfConfig":"29"},{"size":7606,"mtime":1612184877008,"results":"35","hashOfConfig":"29"},{"size":830,"mtime":1612082932370,"results":"36","hashOfConfig":"29"},{"size":832,"mtime":1612082863620,"results":"37","hashOfConfig":"29"},{"size":3668,"mtime":1612082054952,"results":"38","hashOfConfig":"29"},{"size":5660,"mtime":1612087184094,"results":"39","hashOfConfig":"29"},{"size":449,"mtime":1612019529248,"results":"40","hashOfConfig":"29"},{"size":467,"mtime":1612043411202,"results":"41","hashOfConfig":"29"},{"size":486,"mtime":1612130619843,"results":"42","hashOfConfig":"29"},{"size":569,"mtime":1612184510156,"results":"43","hashOfConfig":"29"},{"size":424,"mtime":1612134911191,"results":"44","hashOfConfig":"29"},{"size":8024,"mtime":1612133539773,"results":"45","hashOfConfig":"29"},{"size":911,"mtime":1612133163065,"results":"46","hashOfConfig":"29"},{"size":1182,"mtime":1612184642305,"results":"47","hashOfConfig":"29"},{"size":460,"mtime":1612048194214,"results":"48","hashOfConfig":"29"},{"size":906,"mtime":1612083317879,"results":"49","hashOfConfig":"29"},{"size":799,"mtime":1612091001806,"results":"50","hashOfConfig":"29"},{"size":2315,"mtime":1612138397225,"results":"51","hashOfConfig":"29"},{"size":446,"mtime":1612135724672,"results":"52","hashOfConfig":"29"},{"size":286,"mtime":1612135813130,"results":"53","hashOfConfig":"29"},{"size":492,"mtime":1612136488528,"results":"54","hashOfConfig":"29"},{"size":171,"mtime":1612180167231,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"py0plh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},"/home/edward/Documents/class-attend/client/src/index.js",[],["120","121"],"/home/edward/Documents/class-attend/client/src/reportWebVitals.js",[],"/home/edward/Documents/class-attend/client/src/App.js",[],"/home/edward/Documents/class-attend/client/src/components/Dashboard.js",["122","123"],"import React, {useContext} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nimport PeopleIcon from '@material-ui/icons/People'\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\nimport SpellcheckIcon from '@material-ui/icons/Spellcheck';\nimport TableChartIcon from '@material-ui/icons/TableChart';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button'\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import MailIcon from '@material-ui/icons/Mail';\n\nimport {BrowserRouter as Router, Switch, Route, useHistory, Redirect, useRouteMatch} from 'react-router-dom'\nimport Students from './Students'\nimport Courses from './Courses';\nimport Logs from './Logs';\nimport Attendance from './Attendance';\nimport { signout } from '../actions/lecturerAction';\nimport {LecturerContext} from '../context/LecturerContext'\nimport Timetable from './Timetable'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function Dashboard() {\n  const history = useHistory()\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const {dispatch} = useContext(LecturerContext)\n\n  const {path, url} = useRouteMatch()\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleSignout = () => {\n    // Set authentication to false\n    signout({dispatch})\n    history.push(\"/signin\")\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Class Attend\n          </Typography>\n          <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: \"auto\"}} onClick={handleSignout}>\n            LOGOUT\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n            <ListItem button onClick={() => history.push(`${url}/students`)}>\n              <ListItemIcon><PeopleIcon /></ListItemIcon>\n              <ListItemText primary={\"Students\"} />\n            </ListItem>\n            <ListItem button onClick={() => history.push(`${url}/attendance`)}>\n              <ListItemIcon><SpellcheckIcon /></ListItemIcon>\n              <ListItemText primary={\"Attendace\"} />\n            </ListItem>\n            <ListItem button onClick={() => history.push(`${url}/logs`)}>\n              <ListItemIcon><CollectionsBookmarkIcon /></ListItemIcon>\n              <ListItemText primary={\"User Logs\"} />\n            </ListItem>\n            <ListItem button onClick={() => history.push(`${url}/timetable`)}>\n              <ListItemIcon><TableChartIcon /></ListItemIcon>\n              <ListItemText primary={\"Timetable\"} />\n            </ListItem>\n        </List>\n        {/* <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {/* <Switch> */}\n          <Route path=\"/dashboard\">\n            <Redirect to={`${url}/students`} />\n          </Route>\n          <Route path={`${path}/students`}>\n            <Students />\n          </Route>\n          <Route path={`${path}/courses`}>\n            <Courses />\n          </Route>\n          <Route path={`${path}/logs`}>\n            <Logs />\n          </Route>\n          <Route path={`${path}/attendance`}>\n            <Attendance />\n          </Route>\n          <Route path={`${path}/timetable`}>\n            <Timetable />\n          </Route>\n        {/* </Switch> */}\n      </main>\n    </div>\n  );\n}\n","/home/edward/Documents/class-attend/client/src/components/Students.js",["124","125","126","127","128"],"import React, { useContext, useState, useEffect } from 'react';\nimport {StudentContext} from '../context/StudentContext'\nimport { getStudents} from '../actions/studentActions'\n\nimport CreateStudent from './CreateStudent'\nimport Modal from '@material-ui/core/Modal'\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n// import Paper from '@material-ui/core/Paper';\n// import Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Button from '@material-ui/core/Button'\n// import Grid from '@material-ui/core/Grid'\nimport FormGroup from '@material-ui/core/FormGroup';\n\n// function createData(fullName, cardId, dept, level, imgUrl, phone, courses) {\n//   return { fullName, cardId, dept, level, imgUrl, phone, courses };\n// }\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Donut', 452, 25.0, 51, 4.9),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//   createData('KitKat', 518, 26.0, 65, 7.0),\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\n//   createData('Marshmallow', 318, 0, 81, 2.0),\n//   createData('Nougat', 360, 19.0, 9, 37.0),\n//   createData('Oreo', 437, 18.0, 63, 4.0),\n// ];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\n// const headCells = [\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n// ];\n\nconst headCells = [\n  // { id: 'matNo', numeric: true, disablePadding: false, label: 'MAT NO.' },\n  { id: 'cardId', numeric: false, disablePadding: true, label: 'MAT NO.' },\n  { id: 'fullName', numeric: true, disablePadding: false, label: 'STUDENT NAME' },\n  { id: 'department', numeric: true, disablePadding: false, label: 'DEPARTMENT' },\n  { id: 'level', numeric: true, disablePadding: false, label: 'LEVEL' },\n  { id: 'imgUrl', numeric: true, disablePadding: false, label: 'IMAGE URL' },\n  { id: 'phone', numeric: true, disablePadding: false, label: 'PHONE NO.' },\n  { id: 'courses', numeric: true, disablePadding: false, label: 'COURSES' }\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          {/* <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          /> */}\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Students\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 600,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function Students() {\n  // My code starts\n\n  const {state, dispatch} = useContext(StudentContext)\n\n  useEffect(() => {\n    getStudents({dispatch})\n  }, [])\n\n  // const {fullName, cardId, dept, level, imgUrl, phone, courses}  = state\n  // const rows = state.map(aStudent => {\n  //   return(\n  //     createData(fullName, cardId, dept, level, imgUrl, phone, courses)\n  //   )\n  // })\n\n  const [open, setOpen]  = useState(false)\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  \n  // const rows = [\n  //   createData('Cupcake', 305, 3.7, 67, 4.3),\n  //   createData('Donut', 452, 25.0, 51, 4.9),\n  //   createData('Eclair', 262, 16.0, 24, 6.0),\n  //   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  //   createData('Gingerbread', 356, 16.0, 49, 3.9),\n  //   createData('Honeycomb', 408, 3.2, 87, 6.5),\n  //   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  //   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  //   createData('KitKat', 518, 26.0, 65, 7.0),\n  //   createData('Lollipop', 392, 0.2, 98, 0.0),\n  //   createData('Marshmallow', 318, 0, 81, 2.0),\n  //   createData('Nougat', 360, 19.0, 9, 37.0),\n  //   createData('Oreo', 437, 18.0, 63, 4.0),\n  // ];\n\n  \n\n  // My code ends\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('fullName');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      // const newSelecteds = rows.map((n) => n.name);\n      const newSelecteds = state.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, state.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      {/* <Paper className={classes.paper}> */}\n            <FormGroup row>\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleOpen} style={{marginLeft: \"auto\"}}>\n                CREATE STUDENT\n              </Button>\n              <Modal\n                open={open}\n                onClose={handleClose}\n              >\n                <CreateStudent />\n              </Modal>\n            </FormGroup>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            \n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              // rowCount={rows.length}\n              rowCount={state.length}\n            />\n            \n            <TableBody>\n              {state && stableSort(state, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.cardId}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        {/* <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        /> */}\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.cardId}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.fullName}</TableCell>\n                      <TableCell align=\"right\">{row.dept}</TableCell>\n                      <TableCell align=\"right\">{row.level}</TableCell>\n                      <TableCell align=\"right\"><a href=\"#\">{row.imgUrl}</a></TableCell>\n                      <TableCell align=\"right\">{row.phone}</TableCell>\n                      <TableCell align=\"right\">{row.courses.map(course => `${course}, `)}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          // count={rows.length}\n          count={state.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      {/* </Paper> */}\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","/home/edward/Documents/class-attend/client/src/components/Courses.js",[],"/home/edward/Documents/class-attend/client/src/components/Attendance.js",["129","130","131","132","133","134","135","136"],"/home/edward/Documents/class-attend/client/src/components/routes/PrivateRoute.js",["137","138","139"],"import React, {useEffect, useState, useContext} from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport {LecturerContext} from '../../context/LecturerContext'\n\nconst PrivateRoute = (props) => {\n    const {children, ...rest} = props\n    const isAuth = localStorage.getItem(\"isAuthenticated\")\n    // const [isAuthenticated, setIsAuthenticated] = useState(null)\n    // useEffect(() => {\n    //     const authState = localStorage.getItem(\"isAuthenticated\")\n    //     setIsAuthenticated(authState)\n    // }, [])\n\n    const {state, dispatch} = useContext(LecturerContext)\n\n    return(\n        <Route\n            {...rest}\n            render = { () => {\n                return state.isAuthenticated || isAuth === \"true\" ? children : <Redirect to=\"/signin\" />\n            }}\n        />\n    )\n}\n\nexport default PrivateRoute","/home/edward/Documents/class-attend/client/src/components/routes/PublicRoute.js",["140","141","142"],"import React, {useState, useEffect, useContext} from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport {LecturerContext} from '../../context/LecturerContext'\n\nconst PublicRoute = (props) => {\n    const {children, ...rest} = props\n    const isAuth = localStorage.getItem(\"isAuthenticated\")\n    // const [isAuthenticated, setIsAuthenticated] = useState(null)\n    // useEffect(() => {\n    //     const authState = localStorage.getItem(\"isAuthenticated\")\n    //     setIsAuthenticated(authState)\n    // }, [])\n\n    const {state, dispatch} = useContext(LecturerContext)\n\n    return(\n        <Route\n            {...rest}\n            render = { () => {\n                return state.isAuthenticated || isAuth === \"true\" ? <Redirect to=\"/dashboard\" /> : children\n            }}\n         />\n    )\n}\n\nexport default PublicRoute","/home/edward/Documents/class-attend/client/src/components/auth/SignIn.js",[],"/home/edward/Documents/class-attend/client/src/components/auth/SignUp.js",[],"/home/edward/Documents/class-attend/client/src/context/StudentContext.js",[],"/home/edward/Documents/class-attend/client/src/context/AttendanceContext.js",[],"/home/edward/Documents/class-attend/client/src/reducers/studentReducer.js",[],"/home/edward/Documents/class-attend/client/src/reducers/attendanceReducer.js",["143","144"],"/home/edward/Documents/class-attend/client/src/actions/types.js",["145"],"export default {\n    GET_STUDENTS : \"GET_STUDENTS\",\n    ADD_STUDENT : \"ADD_STUDENT\",\n    DELETE_STUDENT : \"DELETE_STUDENT\",\n    GET_ALL_ATTENDANCE: \"GET_ALL_ATTENDANCE\",\n    GET_ATTENDANCE_BY_COURSE: \"GET_ATTENDANCE_BY_COURSE\",\n    GET_ATTENDANCE_BY_DATE_AND_COURSE: \"GET_ATTENDANCE_BY_DATE_AND_COURSE\",\n    SIGNIN: \"SIGNIN\",\n    SIGNUP: \"SIGNUP\",\n    SIGNOUT: \"SIGNOUT\",\n    GET_LOG: \"GET_LOG\",\n    CLEAR_LOG: \"CLEAR_LOG\"\n}","/home/edward/Documents/class-attend/client/src/components/CreateStudent.jsx",["146"],"import React from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper'\n// import Input from '@material-ui/core/Input'\n// import Typography from '@material-ui/core/Typography'\nimport { useState, useContext } from 'react';\nimport {addStudent} from '../actions/studentActions'\nimport {StudentContext} from '../context/StudentContext'\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n    //   margin: theme.spacing(1),\n    //   width: '25ch',\n    padding: theme.spacing(.5)\n    },\n  },\n}));\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        // display: 'flex'\n    },\n    formControl: {\n        margin: theme.spacing(4)\n    },\n    paper: {\n        position: 'absolute',\n        width: 800,\n        height: 600,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n      },\n}))\n\nexport default function CreateStudent() {\n  const classes = useStyles();\n  const classes2 = useStyles2();\n  const courses = [\"MCT502\", \"MCT304\", \"MCT508\", \"MCT516\", \"MCT506\", \"MCT510\", \"MCT313\", \"MCT528\", \"MCT524\", \"MCT526\", \"MCT512\", \"MCT504\", \"MCT314\", \"FET504\"]\n  const [state, setState] = useState({\n     MCT502: false, MCT304: false, MCT508: true, MCT516: true, MCT506: false, MCT510: false, MCT313: false, MCT528: true, MCT524: false, MCT526: false, MCT512: false, MCT504: false, MCT314: false, FET504: false\n  })\n\n  const student = useContext(StudentContext)\n\n  const [formState, setFormState] = useState({\n      cardId: \"\",\n      fullName: \"\",\n      matNo: \"\",\n      dept: \"\",\n      level: \"\",\n      phone: \"\",\n      imgUrl: \"\"\n  })\n\n//   const {MCT502, MCT304, MCT508, MCT516, MCT506, MCT510, MCT313, MCT528, MCT524, MCT526, MCT512, MCT504, MCT314, FET504} = state\n//   const error = [MCT502, MCT304, MCT508, MCT516, MCT506, MCT510, MCT313, MCT528, MCT524, MCT526, MCT512, MCT504, MCT314, FET504].filter(one => one).length < 3\nconst error = false\n\n  const getCourses = () => {\n      return courses.filter(course => state[course])\n  }\n\n  const handleChange = (event) => {\n      setState({...state, [event.target.name]: event.target.checked})\n  }\n\n  const handleFormChange = (e) => {\n      setFormState({...formState, [e.target.name]: e.target.value})\n  }\n\n  const handleFormSubmit = (e) => {\n      const theSelectCourse = getCourses()\n      addStudent({dispatch: student.dispatch, newStudent: {...formState, courses: theSelectCourse}})\n  }\n\n  return (\n    <Paper style={{top: `50%`, left: `50%`, transform: `translate(-50%, -50%)`}} className={classes.paper}>\n        {/* <Typography variant=\"h6\" gutterBottom>\n            CREATE STUDENT\n      </Typography> */}\n      {/* <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{margin: \".5rem\"}}\n            onClick={handleFormSubmit}\n            fullWidth\n        >\n            CREATE STUDENT\n        </Button> */}\n    <form className={classes2.root} noValidate autoComplete=\"off\">\n      <TextField id=\"outlined-basic1\" onChange={handleFormChange} name=\"fullName\" value={formState.fullName} label=\"Full Name\"  variant=\"outlined\" />\n      <TextField id=\"outlined-basic2\" onChange={handleFormChange} name=\"matNo\" value={formState.matNo} label=\"Mat No.\"  variant=\"outlined\" />\n      <TextField id=\"outlined-basic3\" onChange={handleFormChange} name=\"cardId\" value={formState.cardId} label=\"Card ID\" variant=\"outlined\" />\n        <TextField id=\"outlined-basic4\" name=\"imgUrl\" label=\"\" accept=\"image/*\" placeholder=\"select image\" variant=\"outlined\" style={{width:\"93%\"}} type=\"file\"/>\n      <TextField id=\"outlined-basic5\" onChange={handleFormChange} name=\"dept\" value={formState.dept} label=\"Department\" variant=\"outlined\" />\n      <TextField id=\"outlined-basic6\" onChange={handleFormChange} name=\"level\" value={formState.level} label=\"Level\" variant=\"outlined\" />\n      <TextField id=\"outlined-basic7\" onChange={handleFormChange} name=\"phone\" value={formState.phone} label=\"Phone Number\" variant=\"outlined\" />\n      <Paper variant=\"outlined\">\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">Select Your Courses</FormLabel>\n            <FormGroup>\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT502\" />}\n                label=\"MCT502\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT516\" />}\n                label=\"MCT516\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT313\" />}\n                label=\"MCT313\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT526\" />}\n                label=\"MCT526\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT314\" />}\n                label=\"MCT314\"\n            />\n            </FormGroup>\n            {/* <FormHelperText>Must Offer three Courses at least</FormHelperText> */}\n            <FormHelperText>Must Select one from each section*</FormHelperText>\n        </FormControl>\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\"></FormLabel>\n            <FormGroup>\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT304\" />}\n                label=\"MCT304\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT506\" />}\n                label=\"MCT506\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT528\" />}\n                label=\"MCT528\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT512\" />}\n                label=\"MCT512\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT504\" />}\n                label=\"MCT504\"\n            />\n            </FormGroup>\n            {/* <FormHelperText>Must Offer a Course here</FormHelperText> */}\n        </FormControl>\n        <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\"></FormLabel>\n            <div></div>\n            <FormGroup>\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT508\" />}\n                label=\"MCT508\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT510\" />}\n                label=\"MCT510\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT524\" />}\n                label=\"MCT524\"\n            />\n            <FormControlLabel\n                control={<Checkbox onChange={handleChange} name=\"MCT504\" />}\n                label=\"MCT504\"\n            />\n            </FormGroup>\n            {/* <FormHelperText>Must Offer a Course here</FormHelperText> */}\n        </FormControl>\n        </Paper>\n    </form>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{margin: \".5rem\"}}\n            onClick={handleFormSubmit}\n            fullWidth\n        >\n            CREATE STUDENT\n        </Button>\n        </Paper>\n  );\n}","/home/edward/Documents/class-attend/client/src/actions/studentActions.js",["147","148","149","150","151","152","153"],"import types from \"./types\"\nimport axios from 'axios'\n\nexport const getStudents = ({dispatch}) => {\n    axios.get(\"/students\").then((resp) => {\n        console.log(\"The Data\", resp)\n        // return  dispatch({\n        dispatch({\n            type: types.GET_STUDENTS,\n            payload: resp.data.data\n        })\n    })\n}\n\nexport const addStudent = ({dispatch, newStudent}) => {\n    const {cardId, fullName, dept, level, phone, courses, matNo} = newStudent\n    // const newStudent = {cardId, fullName, dept, level, phone, courses, matNo}\n    axios.post(\"/studentS/add\", newStudent).then((resp) => {\n        dispatch({\n            type: types.ADD_STUDENT,\n            payload: resp.data.data\n        })\n    })\n}\n\nexport const deleteStudent = (id) => {\n    axios.delete(`/student/delete/${id}`).then(resp => {\n        return {\n            type: types.DELETE_STUDENT,\n            payload: id\n        }\n    })\n}\n","/home/edward/Documents/class-attend/client/src/actions/attendanceAction.js",[],"/home/edward/Documents/class-attend/client/src/context/LecturerContext.js",[],"/home/edward/Documents/class-attend/client/src/actions/lecturerAction.js",[],"/home/edward/Documents/class-attend/client/src/reducers/lecturerReducer.js",[],"/home/edward/Documents/class-attend/client/src/components/Logs.jsx",["154","155"],"import React, {useContext, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {LogContext} from '../context/LogContext'\nimport {getLogs, clearLogs} from '../actions/logActions'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n\nexport default function Logs() {\n  const classes = useStyles();\n  const {state, dispatch} = useContext(LogContext)\n\n  useEffect(() => {\n    getLogs({dispatch})\n  }, [])\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Lecturer</TableCell>\n            <TableCell align=\"right\">Course</TableCell>\n            <TableCell align=\"right\">Date</TableCell>\n            {/* <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell> */}\n            {/* <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {state && state.map((row) => (\n            <TableRow key={row._id}>\n              <TableCell >\n                {row.lecturerName}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\" align=\"right\">{row.course}</TableCell>\n              <TableCell align=\"right\">{row.createdAt}</TableCell>\n              {/* <TableCell align=\"right\">{row.carbs}</TableCell> */}\n              {/* <TableCell align=\"right\">{row.protein}</TableCell> */}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","/home/edward/Documents/class-attend/client/src/context/LogContext.js",[],"/home/edward/Documents/class-attend/client/src/reducers/logReducer.js",[],"/home/edward/Documents/class-attend/client/src/actions/logActions.js",[],"/home/edward/Documents/class-attend/client/src/components/Timetable.jsx",["156"],"import React from 'react'\nimport table from './image1.png'\n\nconst Timetable = () => {\n    return(\n        <img src={table}>\n        </img>\n    )\n}\nexport default Timetable",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":28,"column":26,"nodeType":"163","messageId":"164","endLine":28,"endColumn":32},{"ruleId":"161","severity":1,"message":"165","line":28,"column":34,"nodeType":"163","messageId":"164","endLine":28,"endColumn":40},{"ruleId":"161","severity":1,"message":"166","line":101,"column":20,"nodeType":"163","messageId":"164","endLine":101,"endColumn":36},{"ruleId":"161","severity":1,"message":"167","line":101,"column":54,"nodeType":"163","messageId":"164","endLine":101,"endColumn":65},{"ruleId":"161","severity":1,"message":"168","line":101,"column":67,"nodeType":"163","messageId":"164","endLine":101,"endColumn":75},{"ruleId":"169","severity":1,"message":"170","line":247,"column":6,"nodeType":"171","endLine":247,"endColumn":8,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":411,"column":48,"nodeType":"175","endLine":411,"endColumn":60},{"ruleId":"161","severity":1,"message":"176","line":69,"column":9,"nodeType":"163","messageId":"164","endLine":69,"endColumn":17},{"ruleId":"161","severity":1,"message":"177","line":80,"column":9,"nodeType":"163","messageId":"164","endLine":80,"endColumn":16},{"ruleId":"161","severity":1,"message":"178","line":82,"column":10,"nodeType":"163","messageId":"164","endLine":82,"endColumn":14},{"ruleId":"161","severity":1,"message":"179","line":82,"column":16,"nodeType":"163","messageId":"164","endLine":82,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":112,"column":6,"nodeType":"171","endLine":112,"endColumn":8,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":152,"column":13,"nodeType":"183","endLine":152,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":182,"column":13,"nodeType":"183","endLine":182,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":194,"column":13,"nodeType":"183","endLine":194,"endColumn":39},{"ruleId":"161","severity":1,"message":"184","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"185","line":1,"column":27,"nodeType":"163","messageId":"164","endLine":1,"endColumn":35},{"ruleId":"161","severity":1,"message":"186","line":14,"column":19,"nodeType":"163","messageId":"164","endLine":14,"endColumn":27},{"ruleId":"161","severity":1,"message":"185","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":24},{"ruleId":"161","severity":1,"message":"184","line":1,"column":26,"nodeType":"163","messageId":"164","endLine":1,"endColumn":35},{"ruleId":"161","severity":1,"message":"186","line":14,"column":19,"nodeType":"163","messageId":"164","endLine":14,"endColumn":27},{"ruleId":"161","severity":1,"message":"187","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":26},{"ruleId":"161","severity":1,"message":"188","line":3,"column":7,"nodeType":"163","messageId":"164","endLine":3,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":1,"column":1,"nodeType":"191","endLine":13,"endColumn":2},{"ruleId":"161","severity":1,"message":"192","line":2,"column":22,"nodeType":"163","messageId":"164","endLine":2,"endColumn":35},{"ruleId":"161","severity":1,"message":"193","line":16,"column":12,"nodeType":"163","messageId":"164","endLine":16,"endColumn":18},{"ruleId":"161","severity":1,"message":"194","line":16,"column":20,"nodeType":"163","messageId":"164","endLine":16,"endColumn":28},{"ruleId":"161","severity":1,"message":"195","line":16,"column":30,"nodeType":"163","messageId":"164","endLine":16,"endColumn":34},{"ruleId":"161","severity":1,"message":"196","line":16,"column":36,"nodeType":"163","messageId":"164","endLine":16,"endColumn":41},{"ruleId":"161","severity":1,"message":"197","line":16,"column":43,"nodeType":"163","messageId":"164","endLine":16,"endColumn":48},{"ruleId":"161","severity":1,"message":"198","line":16,"column":50,"nodeType":"163","messageId":"164","endLine":16,"endColumn":57},{"ruleId":"161","severity":1,"message":"199","line":16,"column":59,"nodeType":"163","messageId":"164","endLine":16,"endColumn":64},{"ruleId":"161","severity":1,"message":"200","line":12,"column":18,"nodeType":"163","messageId":"164","endLine":12,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":38,"column":6,"nodeType":"171","endLine":38,"endColumn":8,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":6,"column":9,"nodeType":"175","endLine":6,"endColumn":26},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["206"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'lecturer' is assigned a value but never used.","'history' is assigned a value but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.",["207"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'useState' is defined but never used.","'dispatch' is assigned a value but never used.","'AccordionActions' is defined but never used.","'attendance' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ThemeProvider' is defined but never used.","'cardId' is assigned a value but never used.","'fullName' is assigned a value but never used.","'dept' is assigned a value but never used.","'level' is assigned a value but never used.","'phone' is assigned a value but never used.","'courses' is assigned a value but never used.","'matNo' is assigned a value but never used.","'clearLogs' is defined but never used.",["208"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"209","fix":"211"},{"desc":"209","fix":"212"},"Update the dependencies array to be: [dispatch]",{"range":"213","text":"214"},{"range":"215","text":"214"},{"range":"216","text":"214"},[8153,8155],"[dispatch]",[3504,3506],[1218,1220]]